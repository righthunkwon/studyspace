package abstractclass01;

public class ChefTest {
	public static void main(String[] args) {
		// 추상메소드
		/*
			부모가 구현하고 싶은 내용이 없다고 해서 구현 자체를 안 해버리면
			동적 바인딩에 의해 자식의 오버라이딩된 함수가 실행되는 기회가 없어지게 된다.
			
			빈 깡통(내용을 아무것도 작성하지 않은 {})을 만들어 놓으면 자식이 구현하든 말든 신경쓰지 않는다.
			반면 abstract으로 만들어 놓으면 자식클래스는 무조건 이를 구현해야 하는 의무를 가진다.
			(빈 깡통과 abstract의 차이는 강제성이다)
		*/
	}
}
