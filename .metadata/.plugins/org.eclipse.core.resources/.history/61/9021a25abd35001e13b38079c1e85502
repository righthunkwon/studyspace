package array02;

import java.util.Scanner;

public class P_1204 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		// test case
		int tc = sc.nextInt();
		for (int t = 1; t <= tc; t++) {
			
			// 배열에 값 입력
			int n = 1000;
			int[] arr = new int[n];
			for (int i = 0; i < n; i++) {
				arr[i] = sc.nextInt();
			}
			
			// 유사 Counting Sort
			// 1. 도수의 개수를 나타내는 도수분포표 배열 생성
			int[] cnt = new int[101]; // 0~100점을 담는 101 크기를 가진 배열
			for (int i = 0; i < n; i++) {
				// 해당 값을 인덱스로 하여 카운트를 증가
				cnt[arr[i]]++;
			}
			
			// 2. cnt의 최댓값(최빈값의 index)을 출력
			// 빈도수가 동일하면 더 큰 점수의 index가 출력되도록 역순으로 배열 탐색
			int maxCnt = 0; // 최대값 초기화
			for (int i = cnt.length - 1; i >= 0; i--) {
				if (maxCnt < cnt[i]) {
					maxCnt = cnt[i];
				}
			}
			
			// maxCnt의 index 출력
			int maxCntIdx = 0;
			for (int i = 0; i < cnt.length; i++) {
				if (maxCntIdx < cnt[i]) {
					maxCntIdx = cnt[i];
				}
			}
			
			System.out.printf("#%d %d", t, arr[maxCntIdx]);
			System.out.println();
		}
	}
}
