
트리
	비선형구조
	1:N의 계층관계
	상위에서 하위로 내려가는 뒤집은 나무 모양의 구조
	
	한 개 이상의 노드로 이루어진 유한집합
	최상의 노드는 루트(root)
	나머지 노드들은 n개의 분리집합으로 분리
	어떤 트리의 하위 트리는 재귀적 정의에 따라 트리가 될 수 있음

	(1) 노드
	노드는 트리의 원소
	간선은 노드를 연결하는 선
	간선은 부모노드와 자식노드를 연결
	
	루트 노드 : 트리의 시작 노드
	형제 노드 : 같은 부모 노드의 자식 노드들(단순히 같은 레벨에 있다고 형제노드가 아니라 바로 위의 부모를 공유해야 한다)
	조상 노드 : 간선을 따라 루트 노드까지 이르는 경로에 있는 모든 노드들
	자손 노드 : 서브 트리에 있는 하위 레벨의 노드들
	서브 트리 : 부모노드와 연결된 간선을 끊었을 때 생성되는 트리

	(2) 차수
	노드의 차수 : 노드에 연결된 자식 노드의 수
	트리의 차수 : 트리에 있는 노드의 차수 중에서 가장 큰 값
	단말 노드(리프 노드) : 차수가 0인 노드, 즉 자식 노드가 없는 노드(잎사귀에서는 더 가지가 날 수 없어서 리프 노드는 단말 노드)
	노드는 부모를 하나만 가질 수 있다(트리는 1:n의 계층관계를 이룬다. n:m의 관계는 그래프이다)
	노드가 단 하나만 있는 트리구조는 차수가 0인 단말노드이자 루트노드이다.
	
	(3) 높이
	노드의 높이 : 루트에서 노드에 이르는 간선의 수(노드의 레벨), 아래로 갈 수록 레벨이 높아진다, 루트 노드의 레벨은 보통 0이다.
	트리의 높이 : 트리에 있는 노드의 높이 중 가장 큰 값(최대 레벨)
	

이진트리
	각 노드가 자식 노드를 최대 두 개만 가질 수 있는 트리(자식노드의 개수 : 0, 1, 2)
	왼쪽 자식 노드, 오른쪽 자식 노드로 구성된다
	레벨 n에서의 노드의 최대 개수는 2^n개이다. (레벨은 0부터 시작함에 유의)
	높이가 h인 이진트리가 가질 수 있는 노드의 최소는 h + 1 개가 되고, 최대는 2^h+1 - 1개이다. (높이는 0부터 시작함에 유의)
	
	
	(1) 포화이진트리(Perfect Binary Tree)
	모든 레벨에 노드가 포화상태로 차있는 이진트리
	즉, 모든 노드가 자식노드를 2개를 갖는 이진트리
	높이가 h일 때 최대의 노드개수인 2^h+1 - 1개의 노드를 가진 이진트리
	개념적으로 포화이진트리는 정이진트리이자 완전이진트리이다. 
	
	(2) 정이진트리(Full Binary Tree)
	모든 노드가 자식이 0개 이거나 2개를 갖는 이진트리
	개념적으로 포화이진트리를 포함하는 이진트리
	
	(3) 완전이진트리(Complete Binary Tree)
	빈틈없이 왼쪽을 열심히 채우는 이진트리
	높이가 h이고 노드 수가 n개 일 때 포화이진트리의 노드번호 1번부터 n번까지 빈 자리가 없는 이진트리
	
	(4) 편향 이진 트리(Skewed Binary Tree)
	왼쪽이든 오른쪽이든 일자로 된 이진트리
	높이h에 대한 최소 개수의 노드를 가지면서 한쪽 방향의 자식 노드만을 가진 이진트리
	

배열을 이용한 이진트리의 표현
	이진트리에 번호 부여(루트 번호는 1번으로)
	레벨 n에 있는 노드에 대하여 왼쪽부터 오른쪽으로 2^n부터 2^n+1 - 1까지 번호를 차례대로 부여
			  	   	1
			2				 3
		4		5 		 6		 7
	  8   9   10 11    12 13   14 15 
	
	노드번호가 i인 노드의 부모 노드 번호 		: i/2
	노드번호가 i인 노드의 왼쪽 자식 노드 번호	: 2 * i
	노드번호가 i인 노드의 오른쪽 자식 노드 번호 	: 2 * i + 1
	레벨 n의 노드 시작 번호 				: 2^n
	
	노드번호를 배열의 인덱스로 사용하면 편리하다.
	이때 배열의 인덱스 0은 비워두고, 인덱스 1번부터 루트노드를 담으며 시작한다.
	
	이차원배열로 왼쪽자식, 오른쪽자식을 표현하여 이진트리를 만들 수도 있고,
	삼차원배열로 왼쪽자식, 오른쪽자식, 부모를 표현하여 이진트리를 만들 수도 있다.
	
	
연결리스트를 이용한 이진트리의 표현
	배열을 이용할 경우 편향 이진 트리의 경우 사용하지 않는 배열 원소에 대한 메모리 공간 낭비가 발생한다.
	또한, 트리의 중간에 새로운 노드를 삽입하거나 기존 노드를 삭제할 경우 배열의 크기 변경이 어려워 비효율적이다.
	이때, 연결 자료구조를 이용하여 이진트리를 표현하면 해결할 수 있다.
	이진트리의 모든 노드는 최대 2개의 자식노드를 가지므로 데이터와 left 자식노드, right 자식노드의 연결 노드를 만들면 된다.
	하지만 특정 알고리즘 문제 풀이를 위해 연결리스트로 이진트리를 만드는 건 어려울 수 있다.	
	
	
이진트리의 순회 (전제 : 왼쪽 -> 오르쪽은 고정)
	(1) 전위 순회 : 부모노드 방문 후 자식노드를 좌우순서로 방문 (VLR)
	(2) 중위 순회 : 왼쪽 자식노드, 부모 노드, 오른쪽 자식노드 순으로 방문 (LVR)
	(3) 후위 순회 : 자식노드를 좌우 순서로 방문한 후 부모 노드로 방문한다 (LRV)
	
	전위순회 수행 방법
	1) 현재 노드 n을 방문하여 처리(V)
	2) 현재 노드 n의 왼쪽 서브트리로 이동(L)
	3) 현재 노드 n의 오른쪽 서브트리로 이동(R)

	VLR 순으로 계속 실행할 때 재귀적 방법으로 실행한다.
	

수식 트리
	수식이진트리
	수식을 표현하는 이진트리
	연산자는 루트노드이거나 가지노드
	피연산자는 모두 단말노드(리프노드, 자식노드가 존재하지 않는다)
	
	






	