package polymorphism01;

class Parent {
	String x = "parent";

	public String method() {
		return "parent method!!!!";
	}
}

class Child extends Parent {
	String x = "child";

	@Override
	public String method() {
		return "child method!!!!";
	}
}

public class BindingTest {
	public static void main(String[] args) {
		// (1) 일반적인 객체 생성
//		Parent p = new Parent();
//		Child c = new Child();
//		
//		System.out.println(p.x); // parent
//		System.out.println(p.method()); // parent method!!!!
//		
//		System.out.println(c.x); // child
//		System.out.println(c.method()); // child method!!!!
		
		// (2) 오버라이딩된 메소드 우선 사용: 동적바인딩
		// 멤버변수는 참조 변수 타입을 따르지만,
		// 메소드가 중복될 때는 무조건 자식 클래스의 메소드가 호출된다.
		
		// 다형성 : 상속관계에 있을 대 조상클래스의 타입으로 자식 클래스 객체를 참조할 수 있다.
//		Parent p = new Child();
//		System.out.println(p.x); // parent
//		System.out.println(p.method()); // child method!!!!

	}
}
