
배열
	1차원 배열: 같은 자료형의 집합
	2차원 배열: 1차원 배열을 담고 있는 배열

	
문자열
	기초자료형이 아니라 참조자료형, null로 초기화
	문자열은 문자(들)의 배열


스택
	Last In First Out, 후입선출
	삽입과 삭제 모두 top에서 발생(pointer == top)
	별도의 클래스 존재, 배열 혹은 연결리스트로도 구현 가능
	시스템 스택(함수 호출)과 재귀함수의 개념, 재귀 무한 반복 시 스택오버플로우 발생
	
	재귀함수
	1. 종료조건
	2. 재귀구현부
	
	괄호검사
	1. 괄호의 개수는 같야 한다.
	2. 괄호의 순서는 동일해야 한다.
	3. 검사 이후 괄호가 남아 있으면 안 된다.


큐
	First In First Out, 선입선출
	삽입은 뒤에서, 삭제는 앞에서 발생(pointer == head(front) / tail(rear)
	인터페이스로 존재, LinkedList로 구현
	배열로 구현할 경우 잘못된 포화상태 인식이라는 문제와, 지속적으로 배열을 수정해야 하는 문제 발생
	배열로 나머지 연산자를 통해 물리적으로는 단절되었지만 논리적으로 연결된 원형큐를 만들 수 있다.
	 
연결리스트
	노드 : 데이터 + 주소
	삽입과 삭제 시 수정이 중요하다(도중에 연결이 끊어지지 않도록 유의한다).
	처음 노드는 head
	마지막 노드는 tail
	마지막 노드는 가리키는 주소가 null
	
	1. 단순연결리스트 : 노드가 하나의 주소 링크(단방향)
	2. 이중연결리스트 : 노드가 두 개의 주소 링크(양방향, 이전 링크와 이후 링크)
	
트리
	비선형 자료구조(1:n)
	레벨, 높이, 차수의 개념
	최고 조상 노드는 루트 노드
	자식을 갖지 않는 하위 노드는 단말 노드(리프 노드)
	
	
	이진트리
	자식 노드가 최대 2개인 트리
	1. 포화이진트리 : 모든 레벨의 노드가 포화상태로 차있는, 자식노드를 2개씩 갖는 이진트리
	2. 정이진트리 : 모든 노드가 자식이 0개이거나 2개를 갖는 이진트리
	3. 완전이진트리 : 왼쪽을 빈틈없이 열심히 채우는 이진트리
	4. 편향이진트리 : 왼쪽이든 오른쪽이든 일자로 된 이진트리
	
	이진트리의 순회
	전: VLR
	중: LVR
	후: LRV
	
	힙
	완전이진트리 이용
	최대힙, 최소힙 존재
	
	
	
	
	
	
	
	
	